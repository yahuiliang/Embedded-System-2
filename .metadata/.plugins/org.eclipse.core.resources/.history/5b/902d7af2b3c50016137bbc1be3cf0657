#include <delay_api.h>

void wait_delay();
void reset_regs();

static volatile uint32_t* systick = SYSTICK;

/**
 * The delay subroutine which delays the number of milliseconds based
 * on the argument passed in.
 */
void delay_ms(uint32_t theDelay) {
	reset_regs(systick);
	systick[1] = theDelay * (F_CPU / 8000);
	wait_delay(systick);
}

void delay_us(uint32_t theDelay) {
	reset_regs(systick);
	systick[1] = theDelay * (F_CPU / 8000000);
	wait_delay(systick);
}

void reset_regs() {
	systick[2] = 0;
	systick[0] = 0;
}

void wait_delay() {
	systick[0] = 1; // enable the clock.
	while (!(systick[0] & (1 << 16))) {
			// nothing to do.
		}
	systick[0] = 0;
}
